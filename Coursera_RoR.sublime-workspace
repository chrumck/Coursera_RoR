{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"def",
				"def	def … end"
			],
			[
				"higherc",
				"highest_count_across_lines"
			],
			[
				"high",
				"highest_wf_count"
			],
			[
				"an",
				"analyzer"
			],
			[
				"anal",
				"analyzer"
			],
			[
				"select",
				"selects	(module2_lesson2_formative.rb)"
			],
			[
				"ana",
				"analyzers"
			],
			[
				"highest",
				"highest_count_words_across_lines"
			],
			[
				"file",
				"file_name"
			],
			[
				"eix",
				"exists?〔function〕"
			],
			[
				"requi",
				"require"
			],
			[
				"val",
				"values"
			],
			[
				"wor",
				"word_frequency"
			],
			[
				"eh",
				"each"
			],
			[
				"R-",
				"R-cmath	package"
			],
			[
				"calc",
				"calculate_word_frequency"
			],
			[
				"line",
				"line_number"
			],
			[
				"sel",
				"self"
			],
			[
				"att",
				"attr_accessor"
			],
			[
				"to",
				"to_a"
			],
			[
				"re",
				"reverse"
			],
			[
				"sor",
				"sort"
			]
		]
	},
	"buffers":
	[
		{
			"file": "1_2/_fullstack-course1-module2/Assignments/Lesson03-Assignment01-Classes/student-start/module2_lesson3_formative.rb",
			"settings":
			{
				"buffer_size": 1347,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "\n# LineAnalyzer.\nclass LineAnalyzer\n  attr_reader :highest_wf_count, :highest_wf_words, :content, :line_number\n\n  # initialize\n  def initialize(content, line_number)\n    @content = content\n    @line_number = line_number\n    calculate_word_frequency\n  end\n\n  # calculate_word_frequency\n  def calculate_word_frequency\n    word_frequency = Hash.new(0)\n    @content.chomp.strip.split.each { |word| word_frequency[word.downcase] += 1 }\n    @highest_wf_count = word_frequency.values.max\n    @highest_wf_words = word_frequency.keys\n  end\nend\n\n#  Solution.\nclass Solution\n  #  Implement the following read-only attributes in the Solution class.\n  # * analyzers - an array of LineAnalyzer objects for each line in the file\n  # * highest_count_across_lines - a number with the maximum value for highest_wf_words attribute\n  #   in the analyzers array.\n  # * highest_count_words_across_lines - a filtered array of LineAnalyzer objects with the\n  #   highest_wf_words attribute equal to the highest_count_across_lines determined previously.\n  attr_reader :analyzers, :highest_count_across_lines, :highest_count_words_across_lines\n\n  # initialize\n  def initialize\n    @analyzers = []\n    @highest_count_across_lines = 0\n    @highest_count_words_across_lines = []\n  end\n\n  # * analyze_file() - processes 'test.txt' intro an array of LineAnalyzers and stores them in analyzers.\n  def analyze_file(file_name)\n    unless File.exist?(file_name) { return \"file does not exist\" }\n    \n    line_number = 0\n    @@analyzers.clear\n    \n    File.foreach(file_name) do |line|\n      @@analyzers << LineAnalyzer.new(line, line_number)\n      line_number += 1\n    end\n\n  end\n  \n  # * calculate_line_with_highest_frequency() - determines the highest_count_across_lines and\n  #   highest_count_words_across_lines attribute values\n  def calculate_line_with_highest_frequency\n    @highest_count_across_lines = analyzers.map { |analyzer| analyzer.highest_wf_count }.max\n    @highest_count_wor\n    ds_across_lines = analyzers.select { |analyzer| analyzer.highest_wf_count == @highest_count_across_lines }\n  end\n\n\n  # * print_highest_word_frequency_across_lines() - prints the values of LineAnalyzer objects in\n  #   highest_count_words_across_lines in the specified format\n\n  #  Implement the analyze_file() method() to:\n  # * Read the 'test.txt' file in lines\n  # * Create an array of LineAnalyzers for each line in the file\n\n  #  Implement the calculate_line_with_highest_frequency() method to:\n  # * calculate the maximum value for highest_wf_count contained by the LineAnalyzer objects in analyzers array\n  #   and stores this result in the highest_count_across_lines attribute.\n  # * identifies the LineAnalyzer objects in the analyzers array that have highest_wf_count equal to\n  #   highest_count_across_lines\n  #   attribute value determined previously and stores them in highest_count_words_across_lines.\n\n  # Implement the print_highest_word_frequency_across_lines() method to\n  # * print the values of objects in highest_count_words_across_lines in the specified format\nend\n",
			"file": "1_2/Assignment/module2_assignment.rb",
			"file_size": 3044,
			"file_write_time": 131015951387120764,
			"settings":
			{
				"buffer_size": 3049,
				"line_ending": "Unix"
			}
		},
		{
			"file": "1_2/Assignment/spec/line_analyzer_spec.rb",
			"settings":
			{
				"buffer_size": 1904,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "Package Control Messages\n========================\n\nRuby Completions\n----------------\n\n  Ruby Completions\n  ================\n  \n  Thank you for installing Ruby completions. This is aa simple Ruby package for sublime text that provides completion suggestions mostly for methods and when importing(requiring) packages/modules.\n  \n  \n  Usage\n  =====\n  \n  Typing normally shows method suggestions. Pressing tab will complete it.\n  To use completion features when requiring a gem/package, type `R-` followed by the name and press `ENTER` or `TAB`.\n  \n  	For example, to require 'cmath', type R-cmath and press enter or tab and the require would be completed.\n  \n  For more information, visit <https://github.com/tushortz/Ruby-Completions> or contack me on taiwo.kareem36@gmail.com\n  \n  Contributing\n  ============\n  \n  All contributions are welcome, create a pull request after forking the project from https://github.com/tushortz/Ruby-Completions and I'll get in touch.\n\n\nSublimeCodeIntel\n----------------\n\n  SublimeCodeIntel\n  ================\n  \n   ____        _     _ _                 ____          _      ___       _       _\n  / ___| _   _| |__ | (_)_ __ ___   ___ / ___|___   __| | ___|_ _|_ __ | |_ ___| |\n  \\___ \\| | | | '_ \\| | | '_ ` _ \\ / _ \\ |   / _ \\ / _` |/ _ \\| || '_ \\| __/ _ \\ |\n   ___) | |_| | |_) | | | | | | | |  __/ |__| (_) | (_| |  __/| || | | | ||  __/ |\n  |____/ \\__,_|_.__/|_|_|_| |_| |_|\\___|\\____\\___/ \\__,_|\\___|___|_| |_|\\__\\___|_|\n  A full-featured code intelligence and smart autocomplete engine for Sublime Text.\n     (Code intelligence plugin ported from Open Komodo Editor to Sublime Text)\n  \n  \n  +-------------------------------- HELP WANTED ---------------------------------+\n  |     Maintaining this project is hard, I do it in my spare time, but I'm      |\n  |     basically all alone. If anyone is interested in contributing, please     |\n  |     contact me. I really need much more help maintaining SublimeCodeIntel    |\n  |                                                                              |\n  |                       Follow me on twitter @germbravo                        |\n  |           You can find us at #sublimecodeintel on irc.freenode.net           |\n  |                                                                              |\n  |             If you like SublimeCodeIntel, please make a donation:            |\n  |        http://sublimecodeintel.github.io/SublimeCodeIntel/donate.html        |\n  +------------------------------------------------------------------------------+\n  \n  \n  Features\n  --------\n  \n  Supports all the languages Komodo Editor supports for Code Intelligence (CIX, CodeIntel2):\n  \n  JavaScript, Mason, XBL, XUL, RHTML, SCSS, Python, HTML, Ruby, Python3, XML, Sass, XSLT, Django, HTML5, Perl, CSS, Twig, Less, Smarty, Node.js, Tcl, TemplateToolkit, PHP.\n  \n  \n  Provides the following features:\n  \n  * Jump to Symbol Definition - Jump to the file and line of the definition of a symbol.\n  * Imports autocomplete - Shows autocomplete with the available modules/symbols in real time.\n  * Function Call tooltips - Displays information in the status bar about the working function.\n  \n  \n  + Shortcuts for jump to definition have changed:\n  \n    For Mac OS X:\n      * Jump to definition = ``Control+Click``\n      * Jump to definition = ``Control+Command+Alt+Up``\n      * Go back = ``Control+Command+Alt+Left``\n      * Manual CodeIntel = ``Control+Shift+space``\n  \n    For Linux:\n      * Jump to definition = ``Super+Click``\n      * Jump to definition = ``Control+Super+Alt+Up``\n      * Go back = ``Control+Super+Alt+Left``\n      * Manual CodeIntel = ``Control+Shift+space``\n  \n    For Windows:\n      * Jump to definition = ``Alt+Click``\n      * Jump to definition = ``Control+Windows+Alt+Up``\n      * Go back = ``Control+Windows+Alt+Left``\n      * Manual CodeIntel = ``Control+Shift+space``\n  \n  \n  \n  Notes\n  -----\n  \n  ** Restart Sublime Text after reading this **\n  \n  \n  More information\n  ----------------\n  Please take the time to read the documentation:\n  \n  In case of trouble, please read the Troubleshooting section in the README.\n  \n  * Online - http://sublimecodeintel.github.io/SublimeCodeIntel/\n  * Git - https://github.com/SublimeCodeIntel/SublimeCodeIntel\n  \n  \n  IMPORTANT\n  ---------\n  \n  Do NOT edit the default SublimeCodeIntel settings. Your changes will be lost\n  when SublimeCodeIntel is updated. ALWAYS edit the user SublimeCodeIntel settings\n  by selecting \"Preferences->Package Settings->SublimeCodeIntel->Settings - User\".\n  Note that individual settings you include in your user settings will **completely**\n  replace the corresponding default setting, so you must provide that setting in its entirety.\n",
			"settings":
			{
				"buffer_size": 4711,
				"line_ending": "Unix",
				"name": "Package Control Messages",
				"read_only": true,
				"scratch": true
			}
		},
		{
			"file": "1_2/_fullstack-course1-module2/Assignments/Lesson02-Assignment01-Collections/student-start/module2_lesson2_formative.rb",
			"settings":
			{
				"buffer_size": 567,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 216.0,
		"last_filter": "status",
		"selected_items":
		[
			[
				"status",
				"Git: Status"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"pack",
				"Package Control: Remove Package"
			],
			[
				"list",
				"Package Control: List Packages"
			],
			[
				"difft",
				"Git: Diff Tool All"
			],
			[
				"git diff",
				"Git: Diff Current File"
			],
			[
				"diftt",
				"Git: Diff Tool Current File"
			],
			[
				"diff t",
				"Git: Diff Tool Current File"
			],
			[
				"push",
				"Git: Push Current Branch"
			],
			[
				"git quic",
				"Git: Quick Commit"
			],
			[
				"git add",
				"Git: Add All"
			],
			[
				"git stat",
				"Git: Status"
			],
			[
				"git st",
				"Git: Status"
			],
			[
				"git cus",
				"Git: Custom Command"
			],
			[
				"git difft",
				"Git: Diff Tool Current File"
			],
			[
				"git",
				"Git: Commit history"
			],
			[
				"lis",
				"Package Control: List Packages"
			],
			[
				"insta",
				"Package Control: Install Package"
			]
		],
		"width": 561.0
	},
	"console":
	{
		"height": 323.0,
		"history":
		[
			"y",
			"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by) "
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/tomek/DDocs/Coursera/RoR",
		"/home/tomek/DDocs/Coursera/RoR/1_1",
		"/home/tomek/DDocs/Coursera/RoR/1_2",
		"/home/tomek/DDocs/Coursera/RoR/1_2/Assignment",
		"/home/tomek/DDocs/Coursera/RoR/1_2/Assignment/spec"
	],
	"file_history":
	[
		"/media/DDocs/Coursera/RoR/1_2/_fullstack-course1-module2/Assignments/Lesson03-Assignment01-Classes/student-start/module2_lesson3_formative_org.rb",
		"/home/tomek/.config/sublime-text-3/Packages/User/Preferences.sublime-settings",
		"/home/tomek/.config/sublime-text-3/Packages/Default/Preferences.sublime-settings",
		"/home/tomek/DDocs/Coursera/RoR/1_2/Assignment/module2_assignment_org.rb",
		"/home/tomek/DDocs/Coursera/RoR/1_2/_fullstack-course1-module2/Assignments/Lesson03-Assignment01-Classes/solution/module2_lesson3_formative.rb",
		"/home/tomek/DDocs/Coursera/RoR/1_2/_fullstack-course1-module2/Assignments/Lesson03-Assignment01-Classes/student-start/module2_lesson3_formative_org.rb",
		"/home/tomek/DDocs/Coursera/RoR/1_2/_fullstack-course1-module2/Assignments/Lesson02-Assignment01-Collections/solution/module2_lesson2_formative.rb",
		"/home/tomek/DDocs/Coursera/RoR/1_2/_fullstack-course1-module2/Assignments/Lesson02-Assignment01-Collections/student-start/module2_lesson2_formative_org.rb",
		"/home/tomek/DDocs/Coursera/RoR/1_2/_fullstack-course1-module2/Assignments/Lesson02-Assignment01-Collections/student-start/module2_lesson2_formative.rb",
		"/media/DDocs/Coursera/RoR/.rubocop.yml",
		"/home/tomek/DDocs/Coursera/RoR/1_2/_fullstack-course1-module2/Assignments/Lesson01-Assignment01-Case-Statement/student-start/module2_lesson1_formative.rb",
		"/home/tomek/DDocs/Coursera/RoR/1_2/_fullstack-course1-module2/Assignments/Lesson02-Assignment01-Collections/module2_lesson2_formative_org.rb",
		"/home/tomek/.config/sublime-text-3/Packages/User/Git.sublime-settings",
		"/home/tomek/.config/sublime-text-3/Packages/User/SublimeLinter.sublime-settings",
		"/home/tomek/.config/sublime-text-3/Packages/User/Ruby.sublime-settings"
	],
	"find":
	{
		"height": 36.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"highest_count_words_across_lines",
			"initialize",
			"#",
			". ",
			"#",
			"\"",
			"rvm",
			"path",
			"folder"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"# ",
			"'"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "1_2/_fullstack-course1-module2/Assignments/Lesson03-Assignment01-Classes/student-start/module2_lesson3_formative.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1347,
						"regions":
						{
							"breakpoint":
							{
								"flags": 16,
								"icon": "circle",
								"regions":
								[
								],
								"scope": "string"
							}
						},
						"selection":
						[
							[
								1019,
								1019
							]
						],
						"settings":
						{
							"syntax": "Packages/Ruby/Ruby.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "1_2/Assignment/module2_assignment.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3049,
						"regions":
						{
							"breakpoint":
							{
								"flags": 16,
								"icon": "circle",
								"regions":
								[
								],
								"scope": "string"
							}
						},
						"selection":
						[
							[
								1962,
								1962
							]
						],
						"settings":
						{
							"auto_complete": false,
							"spell_check": false,
							"syntax": "Packages/Ruby/Ruby.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 714.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "1_2/Assignment/spec/line_analyzer_spec.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1904,
						"regions":
						{
						},
						"selection":
						[
							[
								255,
								255
							]
						],
						"settings":
						{
							"auto_complete": false,
							"syntax": "Packages/Ruby/Ruby.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 3,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4711,
						"regions":
						{
							"breakpoint":
							{
								"flags": 16,
								"icon": "circle",
								"regions":
								[
								],
								"scope": "string"
							}
						},
						"selection":
						[
							[
								4711,
								4711
							]
						],
						"settings":
						{
							"auto_indent": false,
							"default_dir": "/home/tomek/DDocs/Coursera/RoR",
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_width": 2,
							"word_wrap": true
						},
						"translation.x": 0.0,
						"translation.y": 187.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "1_2/_fullstack-course1-module2/Assignments/Lesson02-Assignment01-Collections/student-start/module2_lesson2_formative.rb",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 567,
						"regions":
						{
							"breakpoint":
							{
								"flags": 16,
								"icon": "circle",
								"regions":
								[
								],
								"scope": "string"
							}
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Ruby/Ruby.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 27.0
	},
	"input":
	{
		"height": 36.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"output.git":
	{
		"height": 271.0
	},
	"pinned_build_system": "",
	"project": "Coursera_RoR.sublime-project",
	"replace":
	{
		"height": 68.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 333.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
